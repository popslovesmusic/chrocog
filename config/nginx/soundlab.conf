# Nginx Configuration for Soundlab - Feature 024
# Security hardened reverse proxy with TLS, headers, and WebSocket support

upstream soundlab_backend {
    server localhost:8000;
    keepalive 32;
}

# HTTP -> HTTPS Redirect (FR-003)
server {
    listen 80;
    listen [::]:80;
    server_name soundlab.example.com;

    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS Server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name soundlab.example.com;

    # TLS Configuration (FR-003)
    ssl_certificate /etc/letsencrypt/live/soundlab.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/soundlab.example.com/privkey.pem;

    # TLS 1.2+ only
    ssl_protocols TLSv1.2 TLSv1.3;

    # Strong ciphers
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

    ssl_prefer_server_ciphers off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/soundlab.example.com/chain.pem;

    # Session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers (FR-003, FR-004, FR-005)

    # HSTS (preload)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # CSP (FR-004)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'sha256-REPLACE_WITH_ACTUAL_HASH'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' wss:; font-src 'self'; object-src 'none'; frame-ancestors 'none'; base-uri 'self'; form-action 'self'" always;

    # Additional Security Headers (FR-005)
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Embedder-Policy "require-corp" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=()" always;

    # Remove server header
    server_tokens off;
    more_clear_headers Server;

    # Rate Limiting (FR-007)
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=ws_limit:10m rate=10r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # DDoS Protection
    client_body_timeout 10s;
    client_header_timeout 10s;
    keepalive_timeout 30s;
    send_timeout 10s;

    # Request size limits
    client_max_body_size 10M;
    client_body_buffer_size 128k;

    # Logs
    access_log /var/log/nginx/soundlab_access.log combined;
    error_log /var/log/nginx/soundlab_error.log warn;

    # Frontend Static Files
    location / {
        root /var/www/soundlab/dist;
        try_files $uri $uri/ /index.html;

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # API Endpoints (FR-007 rate limiting)
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        limit_conn conn_limit 10;

        proxy_pass http://soundlab_backend;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;

        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # WebSocket Endpoints (FR-002)
    location /ws/ {
        limit_req zone=ws_limit burst=5 nodelay;

        proxy_pass http://soundlab_backend;
        proxy_http_version 1.1;

        # WebSocket upgrade
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Origin validation happens in application
        proxy_set_header Origin $http_origin;
        proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;

        # Timeouts (longer for WebSocket)
        proxy_connect_timeout 30s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;

        # Disable buffering for WebSocket
        proxy_buffering off;
    }

    # Health Check
    location /health {
        proxy_pass http://soundlab_backend;
        access_log off;
    }

    # Security.txt (RFC 9116)
    location /.well-known/security.txt {
        alias /var/www/soundlab/security.txt;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to sensitive files
    location ~ /(config|\.env|\.git|\.vscode|node_modules|\.pyc$|\.log$) {
        deny all;
        return 404;
    }
}

# Additional Security: Limit HTTP methods
limit_except GET POST PUT PATCH DELETE OPTIONS {
    deny all;
}
