[build-system]
requires = [
    "setuptools>=68.0.0",
    "wheel>=0.41.0",
    "pybind11>=2.12.0",
    "numpy>=1.24.0"
]
build-backend = "setuptools.build_meta"

[project]
name = "soundlab-dase-engine"
version = "1.0.0"
description = "Soundlab Φ-Matrix: Real-time audio synthesis with Φ-based adaptive modulation and D-ASE analog engine"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Soundlab Team", email = "noreply@soundlab.io"}
]
keywords = ["audio", "synthesis", "phi", "dsp", "avx2", "real-time"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Operating System :: OS Independent",
]

dependencies = [
    "fastapi>=0.111.0",
    "uvicorn[standard]>=0.30.0",
    "websockets>=12.0",
    "python-multipart>=0.0.6",
    "sounddevice>=0.4.6",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "pybind11>=2.12.0",
    "python-dotenv>=1.0.0",
    "aiofiles>=23.2.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-timeout>=2.2.0",
    "pytest-cov>=4.1.0",
    "psutil>=5.9.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
midi = [
    "mido>=1.3.0",
    "python-rtmidi>=1.5.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-timeout>=2.2.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
]

[project.urls]
Homepage = "https://github.com/soundlab/phi-matrix"
Documentation = "https://soundlab.github.io/phi-matrix/"
Repository = "https://github.com/soundlab/phi-matrix"
Issues = "https://github.com/soundlab/phi-matrix/issues"

[tool.setuptools]
packages = ["server"]

[tool.setuptools.package-data]
server = ["config/*.json", "presets/*.json"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=server --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "smoke: marks tests as smoke tests",
    "hardware: marks tests requiring hardware (audio device, sensors)",
    "avx2: marks tests requiring AVX2 CPU support",
]
timeout = 300
asyncio_mode = "auto"

[tool.coverage.run]
source = ["server"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
